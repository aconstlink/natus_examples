

config myconfig
{
    render_states
    {}

    vertex_shader
    {
        mat4 proj : projection ;
        mat4 view : view ;

        float some_var ;

        tex2d some_texture ;

        in vec3 pos : position ;
        in vec2 tx : texcoord0 ;

        out vec4 pos : position ;

        shader glsl
        {
            void main()
            {
                // build in function
                vec3 pos = nsl.math.xyz( nsl.math.xyz( in.pos * vec3( nsl.mylib.inner.pi) ) );

                // user library function
                pos = lib.mylib.xyz( in.pos ) ;

                out.pos = proj * view * vec4( pos, 1.0 ) ;
            }
        }

        shader hlsl
        {}

        shader natus
        {}
    }

    pixel_shader
    {
        in vec3 frag_coord : frag_coord ;
        out vec4 color : color ;

        shader gl3 es3
        {
            void main()
            {
                out.color = vec4(1) ;
            }
        }
    }
}