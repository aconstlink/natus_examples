

config myconfig
{
    render_states
    {}

    vertex_shader
    {
        mat4_t proj : projection ;
        mat4_t view : view ;

        in vec3_t pos : position ;
        in vec2_t tx : texcoord ;

        out vec4_t pos : position ;
        out vec2_t tx : texcoord ;

        shader glsl
        {
            void main()
            {
                out.tx = in.tx ;
                out.pos = proj * view * vec4( in.pos, 1.0 ) ;
            }
        }

        shader hlsl
        {
            void main()
            {
                out.tx = in.tx ;
                float4 pos = float4( in.pos, 1.0 ) ;
                out.pos = mul( pos, view ) ;
                out.pos = mul( out.pos, proj ) ;
                //out.pos = float4( sign( in.pos.xy ),0.0f, 1.0f ) ;
            }
        }
    }

    pixel_shader
    {
        tex2d_t some_texture ;
        vec4_t some_color ;

        in vec2_t tx : texcoord ;
        out vec4_t color : color ;

        shader glsl
        {
            void main()
            {
                out.color = texture( some_texture, in.tx ) * some_color ;
                out.color.x = nsl.math.pulse( 0.4, 0.6, in.tx.x ) ;
            }
        }

        shader hlsl
        {
            void main()
            {
                out.color = some_texture.Sample( smp_some_texture, in.tx ) * some_color ;
                //out.color = float4( in.tx.x, 1.0f, 1.0f, 1.0f ) ;
                out.color.x = nsl.math.pulse( 0.4f, 0.6f, in.tx.x ) ;
                //out.color = float4(in.tx.y,1.0f,1.0f,1.0f) ;
                //out.color = some_color ;
            }
        }
    }
}